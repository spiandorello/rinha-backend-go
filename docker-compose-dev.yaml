#1.5 CPUs e 3.0GB

services:
  rb-redis:
    hostname: rb-redis
    image: redis:7.2.1-alpine
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1GB'
    networks:
      - rb

  rb-postgres:
    hostname: rb-postgres
    image: postgres
#    restart: always
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rinha" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.5GB'
    networks:
      - rb

#  rb-nginx:
#    hostname: webserver
#    image: nginx:latest
##    restart: always
#    ports:
#      - 9999:9999
#    deploy:
#      resources:
#        limits:
#          cpus: '0.1'
#          memory: '200m'
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - rb-app-01
#      - rb-app-02
#    networks:
#      - rb

#  rb-app-01:
#    hostname: rb-app-01
##    image: ghrc.io/spiandorello/rinha-backend-api:latest
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      PORT: 8085
#    ports:
#      - 8085:8085
#    deploy:
#      resources:
#        limits:
#          cpus: '0.1'
#          memory: '200m'
#    depends_on:
#      - rb-postgres
#    networks:
#      - rb
#
#  rb-app-02:
#    hostname: rb-app-02
#    image: ghrc.io/spiandorello/rinha-backend-api:latest
##    build:
##      context: .
##      dockerfile: Dockerfile
#    environment:
#      PORT: 8086
#    ports:
#      - 8086:8086
#    deploy:
#      resources:
#        limits:
#          cpus: '0.1'
#          memory: '200m'
#    depends_on:
#      - rb-postgres
#    networks:
#      - rb

volumes:
  db-data:

networks:
  rb: